# Appsec Composite action
name: 'DevSecOps Application Security Actions'
description: 'Running Security Scans for project codes'
inputs:
  project_name:
    required: true
    
  run_dependency_scan:
    required: true
  dependency_scan_token:
    required: false
  dependency_scan_arguments:
    required: false
    
  
    
  run_sast_scan:
    required: true
    default: 'false'  
  sast_release_id:
    required: true
  sast_api_key:
    required: true
  sast_api_secret:
    required: true
  
  run_dast_scan:   
    required: false
    
  run_container_scan:
    required: false
  container_scan_user:
    required: false
  container_scan_password:
    required: false
  container_scan_url:
    required: false
  docker_image_name:
    required: false
  docker_image_tag:
    required: false
  
  
runs:
  using: "composite"
  steps:
  - run: echo  argument for run_dependency_scan = ${{inputs.run_dependency_scan}}
    shell: bash
  - name: Snyk SCA Scanning
    if: ${{inputs.run_dependency_scan == 'true' &&  inputs.dependency_scan_token }}
    run: |
      echo SNYK token is provided running SNYK scan for the project
      echo "----------Download Latest Snyk CLI-----------"
      curl -Lo ./snyk "https://github.com/snyk/snyk/releases/download/v1.683.0/snyk-linux"
      chmod +x snyk
      ls -lrt
      echo ./snyk auth ${{inputs.dependency_scan_token}}
      ./snyk auth ${{inputs.dependency_scan_token}}
      ./snyk test --all-projects -- ${{inputs.dependency_scan_arguments}}  || true
      ./snyk monitor --all-projects -- ${{inputs.dependency_scan_arguments}} || true
    shell: bash 
      
 
 
  - run: echo  argument for run_sast_scan = ${{inputs.run_sast_scan}}
    shell: bash
    
  - name: Fortify Scan Create source Zip upload to FOD for Scanning
    if: ${{inputs.run_sast_scan == 'true' }}
    uses: actions/setup-java@v1
    with:
      java-version: 1.8
  - name: Download fortify executable and run scan 
    if: ${{inputs.run_sast_scan == 'true' }}
    run: |
       sudo wget -c https://github.com/fod-dev/fod-uploader-java/releases/download/v5.2.1/FodUpload.jar  
       sudo apt install zip
       zip -r ${{inputs.project_name}}_fortify.zip .
       java -jar FodUpload.jar -ac ${{ inputs.sast_api_key }} ${{ inputs.sast_api_secret }} -rid ${{ inputs.sast_release_id }} -purl ${{ env.SAST_PORTAL_URL }} -apiurl ${{ env.SAST_API_URL }} -z ${{inputs.project_name}}_fortify.zip ${{ env.SAST_OPTIONS }}    
    shell: bash
    env:
      SAST_PORTAL_URL: https://emea.fortify.com/
      SAST_API_URL: https://api.emea.fortify.com/
      SAST_OPTIONS: '-ep 2 -a 2 -rp 0 -pp 1 -apf -I 1'


  - name: Run Container Scan for Repostiory
    run: echo "----"
    shell: bash
    if: always()
    
  - name: Run Prisma Scan for Repository
    if: ${{ inputs.run_container_scan == 'true' }}
    run: |
      curl --user ${{ inputs.container_scan_user }}:${{ inputs.container_scan_password }} --output ./twistcli ${{ inputs.container_scan_url }}/api/v1/util/twistcli
      chmod a+x ./twistcli     
    shell: bash
  - name: Scan the image using Prisma Cloud
    if: ${{ inputs.run_container_scan == 'true' }}
    run: |
      #./twistcli images scan --address ${{ inputs.container_scan_url }} --user ${{ inputs.container_scan_user }} --password ${{ inputs.container_scan_password }} --details ${{inputs.docker_image_name}}:${{inputs.docker_image_tag}}
      ./twistcli images scan --address ${{ inputs.container_scan_url }} --user ${{ inputs.container_scan_user }} --password ${{ inputs.container_scan_password }} --containerized --details ${{inputs.docker_image_name}}:${{inputs.docker_image_tag}}
    shell: bash
    
    
