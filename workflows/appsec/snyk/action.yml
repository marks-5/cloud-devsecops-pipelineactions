# Appsec Composite action
name: 'DevSecOps Application Security Actions'
description: 'Running SNYK Security Scans for project codes'

inputs:
  application_name:
    required: false
  dependency_scan_token:
    required: false
  dependency_scan_arguments:
    required: false
  build_tool:   
    required: false
    
    
runs:
  using: "composite"
  steps:
  
#   - name: Snyk SCA Scanning for java scripts
#     if: ${{ inputs.build_tool == 'npm' || inputs.build_tool == 'yarn' }}
#     uses: DigitalInnovation/cloud-devsecops-pipelineactions/workflows/appsec/snyk/nodejs-snyk@main
#     with:      
#       dependency_scan_token: ${{ inputs.dependency_scan_token }}
#       dependency_scan_arguments: ${{ inputs.dependency_scan_arguments }}
      
#     uses: snyk/actions@0.3.0
#     env:
#        SNYK_TOKEN: ${{ inputs.dependency_scan_token }}
#     with:
#        args: --sarif-file-output=snyk.sarif 
       
#   - name: Snyk SCA Scanning for Java scripts
#     if: ${{ inputs.build_tool == 'npm' || inputs.build_tool == 'yarn' }}
#     uses: snyk/actions@0.3.0
#     env:
#        SNYK_TOKEN: ${{ inputs.dependency_scan_token }}
#     with:
#        command: monitor
       
       
       
  - name: Snyc scan for maven and gradle     
    run: |
      echo SNYK token is provided running SNYK scan for the project
      echo "----------Download Latest Snyk CLI-----------"
      curl -Lo ./snyk "https://github.com/snyk/snyk/releases/download/v1.683.0/snyk-linux"
      chmod +x snyk
      ./snyk auth ${{inputs.dependency_scan_token}}
      ./snyk test --all-projects --sarif-file-output=snyk.sarif -- ${{inputs.dependency_scan_arguments}}  
      ./snyk monitor --all-projects -- ${{inputs.dependency_scan_arguments}}  
    shell: bash 
    if: ${{ inputs.build_tool != 'npm' || inputs.build_tool != 'yarn' }}
    
    
    
#   - name: Upload result to GitHub Code Scanning
#     uses: github/codeql-action/upload-sarif@v1
#     with:
#        sarif_file: snyk.sarif     
