name: 'Build Nodejs project'
description: 'Building and Pushing Artifact to Azure Artifact Repository'
inputs:
  application_name:
    required: true
  build_environment:
    required: false
    default: 'nonprod'
  build_tool:
    required: false
  build_file_path:
    required: false
  build_file_name:
    required: false
  build_tool_version:
    required: false
  build_and_push_container_image:
    required: false
  run_code_quality_analysis:
    required: false
  run_typecheck_validation:
    required: false
  run_schema_validation:
    required: false
  run_unit_test:
    required: false
  api_key:
    required: false
    
    
  cq_project_key:
    required: false
  cq_host_url:
    required: false
  cq_token:
    required: false
  cq_scan_arguments: 
    required: false
 
    
runs:
  using: "composite"
  steps:
    
    - run: echo Hello, You are Executing Composite action to Execute Build
      shell: bash
    - name: Checkout
      uses: actions/checkout@v2
    - uses: c-hive/gha-yarn-cache@v2.1.0
    - name: Setup NodeJs
      uses: actions/setup-node@v2
      with:
        node-version: ${{ inputs.build_tool_version }}
    - name: Install JS dependencies
      run: yarn install
      shell: bash
    - name: Build
      run: yarn build
      shell: bash
#     - name: Start HTTP Server
#       run: |
#         yarn start &
#         yarn wait-on tcp:4000
#       env:
#       API_TOKEN: ${{ inputs.api_key }}
#       shell: bash
#     - name: Install K6
#       run: |
#         sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
#         echo "deb https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
#         sudo apt-get update
#         sudo apt-get install k6
#       shell: bash 
#     - name: Run performance tests
#       run: k6 -e GITHUB_PR=${{ github.event.number }} -e GITHUB_SHA=${{ github.sha }} -e GITHUB_TOKEN=${{secrets.GITHUB_TOKEN}} run src/test/performance/k6.js
#       shell: bash
#     - name: Run E2E tests
#       run: yarn test:e2e
#       shell: bash

 
 
 
 
 
 
 
 
 
 
      
      #   validate_performance:
#     if: ${{ !contains(github.event.pull_request.labels.*.name, 'skips-performance-tests') }}
#     runs-on: ubuntu-latest
#     name: Performance
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#       - name: Cache Yarn
#         uses: actions/cache@v2
#         with:
#           path: '**/node_modules'
#           key: ${{runner.os}}-yarn-${{hashFiles('yarn.lock')}}
#           restore-keys: |
#             ${{runner.os}}-yarn
#       - name: Setup NodeJs
#         uses: actions/setup-node@v2
#         with:
#           node-version: ${{ env.NODE_VERSION }}
#       - name: Install JS dependencies
#         run: yarn install
#       - name: Build
#         run: yarn build
#       - name: Start HTTP Server
#         run: |
#           yarn start &
#           yarn wait-on tcp:4000
#         env:
#           API_TOKEN: ${{ secrets.API_KEY }}
#       - name: Install K6
#         run: |
#           sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
#           echo "deb https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
#           sudo apt-get update
#           sudo apt-get install k6

#       - name: Run performance tests
#         run: k6 -e GITHUB_PR=${{ github.event.number }} -e GITHUB_SHA=${{ github.sha }} -e GITHUB_TOKEN=${{secrets.GITHUB_TOKEN}} run src/test/performance/k6.js

#   validate-e2e:
#     runs-on: ubuntu-latest
#     name: E2E
#     environment:
#       name: prodeun
#     if: github.actor != 'Yggdrasilbot' && github.actor != 'dependabot' && github.actor != 'dependabot[bot]' && github.actor != 'dependabot-preview[bot]'
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#       - name: Setup NodeJs
#         uses: actions/setup-node@v2
#         with:
#           node-version: ${{ env.NODE_VERSION }}
#       - name: Cache Yarn
#         uses: actions/cache@v2
#         with:
#           path: '**/node_modules'
#           key: ${{runner.os}}-yarn-${{hashFiles('yarn.lock')}}
#           restore-keys: |
#             ${{runner.os}}-yarn
#       - name: Install JS dependencies
#         run: yarn install
#       - name: Build
#         run: yarn build
#       - name: Start HTTP Server
#         run: |
#           yarn start &
#           yarn wait-on tcp:4000
#         env:
#           API_TOKEN: ${{ secrets.API_KEY }}
#       - name: Run E2E tests
#         run: yarn test:e2e
