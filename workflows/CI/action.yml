# ci_build.yml
name: 'Build and push Artifact'
description: 'Building and Pushing Artifact to Azure Artifact Repository'
inputs:
  build_tool:
    required: true
    default: maven
  build_file_path:
    required: false
    default: .
  build_file_name:
    required: false
    default: pom.xml
  settings_file_path:
    required: false
  settings_file_name:
    required: false
  maven_build_arguments:
    required: false
  build_phases: 
    required: false
    default: 'clean install '
  artifact_repository_pat:
    required: false
    
  run_code_analysis:
    required: true
  cq_project_key:
    required: false
  cq_host_url:
    required: false
  cq_token:
    required: false
  cq_scan_arguments:
     required: false
 
    
runs:
  using: "composite"
  steps:
    - run: echo Hello, You are Executing Composite action to Execute Build
      shell: bash
          
    - name: ========== Build and push Build Artifacts to artifact Store ==========
      uses: DigitalInnovation/cloud-devsecops-pipelineactions/workflows/maven-ci@main
      with:
        build_file_path: ${{ inputs.build_file_path }}
        build_file_name: ${{ inputs.build_file_name }}
        settings_file_path: ${{ inputs.settings_file_path }}
        settings_file_name: ${{ inputs.settings_file_name }}
        build_phases: ${{ inputs.build_phases}}
        maven_build_arguments: ${{inputs.maven_build_arguments}}
        artifact_repository_pat: ${{ inputs.artifact_repository_pat }}
        run_code_analysis: ${{ inputs.run_code_analysis }}  
        cq_host_url: ${{ inputs.cq_host_url }} 
        cq_project_key: ${{ inputs.cq_project_key }} 
        cq_token: ${{ inputs.cq_token }}
        cq_scan_arguments: ${{ inputs.cq_scan_arguments }}
      if: ${{ ( inputs.build_tool == 'maven' || inputs.build_tool == 'mvn' )
    
    
#     - run: ls -lart
#       shell: bash
    
#     - name: Maven Build and install Artifacts
#       if: ${{ ( inputs.build_tool == 'maven' || inputs.build_tool == 'mvn' )  && ( contains( inputs.build_phases,'install') || contains(  inputs.build_phases , 'package') )}}
#       run: |
#         mvn clean install ${{inputs.maven_build_arguments}} -f ./${{ inputs.build_file_path }}/${{ inputs.build_file_name }} -s ./${{ inputs.settings_file_path }}/${{ inputs.settings_file_name }}
#       shell: bash  
    
#     - name: Unit_Test
#       if: ${{ (inputs.build_tool == 'maven' || inputs.build_tool == 'mvn' ) && contains( inputs.build_phases , 'test' ) }} 
#       run : | 
#         echo Running Unit Test - ${{ inputs.build_phases }}
#         mvn test ${{inputs.maven_build_arguments}} -f ./${{ inputs.build_file_path }}/${{ inputs.build_file_name }} -s ./${{ inputs.settings_file_path }}/${{ inputs.settings_file_name }}
#         echo 'Test Phase - completed'
#       shell: bash
      
#     - name: Publish built artifact to Artifact repository
#       if: ${{ (inputs.build_tool == 'maven' || inputs.build_tool == 'mvn') && contains( inputs.build_phases , 'deploy' ) && inputs.settings_file_name }}   
#       run : |
#         echo Executing Phase Deploy - ${{ inputs.build_phases }}
#         mvn deploy -s ./${{ inputs.settings_file_path }}/${{ inputs.settings_file_name }} -f ./${{ inputs.build_file_path }}/${{ inputs.build_file_name }} ${{inputs.maven_build_arguments}}
#       shell: bash  
      
#     - name: Code Quality Analysis
#       if: ${{ inputs.run_code_analysis == 'true' }}  
#       run: mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.3.0.603:sonar
#            -Dsonar.projectKey=${{inputs.cq_project_key}} 
#            -Dsonar.host.url=${{inputs.cq_host_url}} 
#            -Dsonar.login=${{inputs.cq_token}} ${{inputs.maven_build_arguments}} 
#            ${{inputs.maven_build_arguments}}
#       shell: bash
    
    
    
    
    
    
    - name: Validate Gradle wrapper
      if: ${{ inputs.build_tool == 'gradle' }}
      uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      
    - name: Build with Gradle
      if: ${{ inputs.build_tool == 'gradle' }}
      run: ./gradlew build
      shell: bash
      
        
    
    
#       ############ Test Ignore ##########
      
#     - name: calling another composite action
#       id: foo
#       uses: gopinath-velayudhan-mns/shared_composite_repo/workflows/sample@main
#       with:
#         who-to-greet: 'Mona the Octocat'
#     - run: echo random-number ${{ steps.foo.outputs.random-number }}
#       shell: bash
