# push_image.yml
name: 'Push docker images'
description: 'Pushing Docker image to Container Registry'
inputs:
  
  cr_imagename:
    required: true
  cr_imagetag:
    required: true
  cr_dockerfile_name:
    required: true
  cr_dockerfile_path:
    required: true
  cr_servername:
    required: true
  cr_subscription:
    required: true
  cr_tenant:
    required: true
  cr_username:
    required: false
  cr_password:
    required: flase
   
    
runs:
  using: "composite"
  steps:
    - run: ls -lart
      shell: bash
    - run : echo $RUNNER_NAME $RUNNER_OS $RUNNER_ARCH $RUNNER_TEMP
      shell: bash
      
   # - run: docker images
   #   shell: bash
      
########### Login and Push image to Azure Container Registry ##############

    - name: 'login to Azure'
      if: ${{ contains(runner.name, 'selfhosted') }}
      uses: azure/login@v1
      with:
        creds: '{"clientId": "${{ inputs.cr_username }}", "clientSecret": "${{ inputs.cr_password }}", "subscriptionId": "${{ inputs.cr_subscription }}", "tenantId": "${{ inputs.cr_tenant }}"}'
            
      
    - name: Run AZ Build and Push Docker to ACR       
      run: |
        #ACC_SUBSCRIPTION= {{ inputs.cr_subscription }}
        #az login --service-principal --username ${{inputs.cr_username}} --password ${{inputs.cr_password}} --tenant ${{inputs.cr_tenant}}
        #[ -z $ACC_SUBSCRIPTION ] && az account set --subscription $ACC_SUBSCRIPTION
        az acr build --registry ${{ inputs.cr_servername }} -t ${{ inputs.cr_servername }}/${{inputs.cr_imagename}}:${{ inputs.cr_imagetag }} --file ./${{inputs.cr_dockerfile_path}}${{inputs.cr_dockerfile_name}} .
      shell: bash
      if: ${{ contains(runner.name, 'selfhosted') }}



    - uses: Azure/docker-login@v1
      with:
        username: ${{inputs.cr_username}}
        password: ${{inputs.cr_password}}
        login-server: ${{inputs.cr_servername}}  
      if: ${{ !contains(runner.name, 'selfhosted') && !contains(inputs.cr_servername, 'ghcr.io')  }}
      
    - name: Log in to the GITHUB Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ghcr.io
        username: ${{inputs.cr_username}}
        password: ${{inputs.cr_password}}  
      if: ${{ !contains(runner.name, 'selfhosted') && contains(inputs.cr_servername, 'ghcr.io')  }}
      
      
    - name: run docker build and push
      run: |
        docker build -f ${{inputs.cr_dockerfile_path}}${{inputs.cr_dockerfile_name}} . -t ${{inputs.cr_imagename}}:${{ inputs.cr_imagetag }}
        docker tag ${{inputs.cr_imagename}}:${{ inputs.cr_imagetag }} ${{ inputs.cr_servername }}/${{inputs.cr_imagename}}:${{ inputs.cr_imagetag }}
        docker push ${{ inputs.cr_servername }}/${{inputs.cr_imagename}}:${{ inputs.cr_imagetag }}
      shell: bash
      if: ${{ !contains(runner.name, 'selfhosted') && !contains(inputs.cr_servername, 'ghcr.io')  }}

#########  Switching over to Github Packages ##########
    
    - name: Execute build 
      run: |
        docker build -f ${{inputs.cr_dockerfile_path}}${{inputs.cr_dockerfile_name}} . -t ${{inputs.cr_imagename}}:${{ inputs.cr_imagetag }}
        docker tag  ${{inputs.cr_imagename}}:${{ inputs.cr_imagetag }} ${{ inputs.cr_servername }}/${{inputs.cr_imagename}}:${{ inputs.cr_imagetag }}
        docker images
        docker push ${{ inputs.cr_servername }}/${{inputs.cr_imagename}}:${{ inputs.cr_imagetag }}
      shell: bash
      if: ${{ !contains(runner.name, 'selfhosted') && contains(inputs.cr_servername, 'ghcr.io')  }}






#     - name: Log in with Azure
#       uses: azure/login@v1
#       with:
#         creds: '${{ inputs.AZURE_CREDENTIALS }}'




