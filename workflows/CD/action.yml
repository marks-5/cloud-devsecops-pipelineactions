name: 'DevSecOps Application Security Actions'
description: 'Running Fority Security Scans for project codes'

inputs:
  
  environment:
    required: true
  application_release_name:
    required: true
  release_version:
    required: false
  kube_config:
    required: false
  is_helm_deployment:
    required: true
  helm_chart_path:
    required: false
  helm_values_file:
    required: false
  helm_values_file_path:
    required: false
  image_name:
    required: false
  image_tag:
    required: false
  cluster_namespace:
    required: false
  create_namespace:
    required: false
  helm_argument: 
    required: false
  dry_run:
    required: false
    default: false
  is_atomic:
    required: false
    default: false
  deployment_script_path:
    required: false
  deployment_script_name:
    required: false

runs:
  using: "composite"
  steps:
    - run: echo Hello, You are Executing Composite action to deploy your project
      shell: bash
    - run : echo $RUNNER_NAME $RUNNER_OS $RUNNER_ARCH $RUNNER_TEMP
      shell: bash  
    - name: ========== Deploy project using helm ==========
      uses: DigitalInnovation/cloud-devsecops-pipelineactions/workflows/CD/helm@latest
      if: ${{ inputs.is_helm_deployment == 'true'}}
      with:
        environment: ${{inputs.environment}}
        application_release_name: ${{inputs.application_release_name}}
        release_version: ${{inputs.release_version}}
        kube_config: ${{inputs.kube_config}}
        is_helm_deployment: ${{inputs.is_helm_deployment}}
        helm_chart_path: ${{inputs.helm_chart_path}}
        helm_values_file: ${{inputs.helm_values_file}}
        helm_values_file_path: ${{inputs.helm_values_file_path}}
        image_name: ${{inputs.image_name}}
        image_tag: ${{inputs.image_tag}}
        cluster_namespace: ${{inputs.cluster_namespace}}
        create_namespace: ${{inputs.create_namespace}}
        helm_argument: ${{inputs.helm_argument}}
        dry_run: ${{inputs.dry_run}}
        is_atomic: ${{inputs.is_atomic}}
        deployment_script_path: ${{inputs.deployment_script_path}}
        deployment_script_name: ${{inputs.deployment_script_name}}
        
        
  
#     - name: Check out repository code
#       uses: actions/checkout@v2

#     - name: k8s-set-context
#       uses: Azure/k8s-set-context@v1
#       with:
#         kubeconfig: ${{ inputs.kube_config }}     


        
#     - name: AKS Deploy and create Namespace Dry Run
#       run: |
#         cd ./${{ inputs.helm_chart_path }}
#         ls -lart
#         helm upgrade --install ${{inputs.application_release_name}}  . '--values=${{ inputs.helm_values_file }}' ${{inputs.helm_argument}} '--namespace=${{inputs.cluster_namespace}}' --create-namespace --dry-run --debug
#         echo ${{env.image}}
#       shell: bash
#       if: ${{ inputs.dry_run == 'true' }}
           
#     - name: AKS Deploy and create Namespace
#       run: |
#         cd ./${{ inputs.helm_chart_path }}
#         helm upgrade --install ${{inputs.application_release_name}}  . '--values=${{ inputs.helm_values_file }}' ${{inputs.helm_argument}} '--namespace=${{inputs.cluster_namespace}}' --create-namespace --atomic
#         echo ${{env.image}}
#       shell: bash
#       if: ${{ inputs.create_namespace == 'true'}}
      
#     - name: AKS Deploy basic
#       run: |
#         cd ./${{ inputs.helm_chart_path }}
#         helm upgrade --install ${{inputs.application_release_name}}  . '--values=${{ inputs.helm_values_file }}' ${{inputs.helm_argument}} '--namespace=${{inputs.cluster_namespace}}'
#         echo ${{env.image}}
#       shell: bash
#       if: ${{ inputs.create_namespace != 'true' && inputs.dry_run != 'true' }}  
        
        
